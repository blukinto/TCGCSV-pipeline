# -*- coding: utf-8 -*-
"""TCGCSV_pipeline.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xYk412e7PVmyvFhqwWyWCBMrcYt4bh-3
"""

import os
import requests
import datetime
import pandas as pd
from pydrive2.auth import GoogleAuth
from pydrive2.drive import GoogleDrive
import json

# Write temporary client and token JSONs from secrets
with open("oauth_client.json", "w") as f:
    f.write(os.environ["GDRIVE_OAUTH_CLIENT_JSON"])

with open("credentials.json", "w") as f:
    f.write(os.environ["GDRIVE_OAUTH_TOKEN_JSON"])

# Authenticate
gauth = GoogleAuth()
gauth.LoadClientConfigFile("oauth_client.json")
gauth.LoadCredentialsFile("credentials.json")
if gauth.credentials is None:
    gauth.LocalWebserverAuth()
else:
    gauth.Authorize()
gauth.SaveCredentialsFile("credentials.json")
drive = GoogleDrive(gauth)

# Example upload function
def upload_to_drive(local_path, filename, parent_folder_id=None):
    file_drive = drive.CreateFile({
        'title': filename,
        'parents': [{'id': parent_folder_id}] if parent_folder_id else []
    })
    file_drive.SetContentFile(local_path)
    file_drive.Upload()
    print(f"Uploaded {filename}")

# Example CSV download + upload
sets = {
    'Surging Sparks': 'https://tcgcsv.com/tcgplayer/3/23651/ProductsAndPrices.csv',
    'Prismatic Evolutions': 'https://tcgcsv.com/tcgplayer/3/23821/ProductsAndPrices.csv',
    'Destined Rivals': 'https://tcgcsv.com/tcgplayer/3/24269/ProductsAndPrices.csv',
    'Black Bolt': 'https://tcgcsv.com/tcgplayer/3/24325/ProductsAndPrices.csv',
    'White Flare': 'https://tcgcsv.com/tcgplayer/3/24380/ProductsAndPrices.csv',
    '151': 'https://tcgcsv.com/tcgplayer/3/23237/ProductsAndPrices.csv',
    'Shrouded Fable': 'https://tcgcsv.com/tcgplayer/3/23529/ProductsAndPrices.csv',
    'Paldean Fates': 'https://tcgcsv.com/tcgplayer/3/23353/ProductsAndPrices.csv'
}

today = datetime.date.today().isoformat()
for set_name, url in sets.items():
    filename = f"{set_name.replace(' ', '_')}_{today}.csv"
    local_path = f"/tmp/{filename}"

    response = requests.get(url)
    response.raise_for_status()
    with open(local_path, 'wb') as f:
        f.write(response.content)

    df = pd.read_csv(local_path)
    df.to_csv(local_path, index=False)

    upload_to_drive(local_path, filename)
